{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","helpers/calender-messages-es.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uireducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdate","eventDelete","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","login_Email","login_Password","formLoginValues","handleLoginInputChange","register_Name","register_Email","register_Password1","register_Password2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","res","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","errors","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","Navbar","useSelector","state","auth","onClick","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","modalOpen","ui","activeEvent","calendar","useEffect","closeModal","utils","DateFnsUtils","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","evento","_id","eventStartAddNew","inputVariant","ampm","label","format","minDate","minDateMessage","autoComplete","rows","AddNewFab","DeleteEventFab","icon","showConfirmButton","timer","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","height","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","components","onDoubleClickEvent","onSelectEvent","onView","view","onSelectSlot","selectable","PrivateRoute","isAuthenticated","Component","component","rest","location","pathname","props","to","protoType","PropTypes","bool","isRequired","func","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.47bba863.chunk.js","sourcesContent":["\r\n//Usaremos el fetch, para usar menos paquete en la aplicacion\r\n//Y no hacerla tan cargada, pero se puede usar axios sin ningun problema\r\n\r\nconst baseUrl=process.env.REACT_APP_API_URL;\r\n\r\n\r\n//Esta funcion nos sirve para hacer peticiones  sin el token\r\n//Puede usarse de forma general, es decir en  otro proyecto de ser necesario\r\n\r\nconst fetchSinToken= (endpoint, data, method='GET') => {\r\n\r\n    //Esto de una hace la petición al endpoint\r\n\r\n    const url=`${baseUrl}/${endpoint}`; //localhost:400/api/endpoint\r\n\r\n    if(method==='GET'){\r\n        return fetch(url);\r\n    }\r\n    else{\r\n        return fetch(url, {\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n\r\n    //Y retorna la peticion, la puedes recibir como\r\n    // const res= await fetchSinToken('auth', {}, 'POST' || 'GET)\r\n    // const body= await res.json();\r\n    //console.log(body) y ahí se vería la info dependiendo de la respuesta de la API\r\n\r\n}\r\n\r\n\r\nconst fetchConToken= (endpoint, data, method='GET') => {\r\n\r\n    //Esto de una hace la petición al endpoint\r\n\r\n    const url=`${baseUrl}/${endpoint}`; //localhost:400/api/endpoint\r\n\r\n    const token= localStorage.getItem('token') || '';\r\n\r\n    //Aqui simplemente le mandamos en los headers, el token\r\n    \r\n    if(method==='GET'){\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'x-token': token\r\n            }\r\n        });\r\n    }\r\n    else{\r\n        return fetch(url, {\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n\r\n    //Y retorna la peticion, la puedes recibir como\r\n    // const res= await fetchSinToken('auth', {}, 'POST' || 'GET)\r\n    // const body= await res.json();\r\n    //console.log(body) y ahí se vería la info dependiendo de la respuesta de la API\r\n    \r\n}\r\n\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","export const types={\r\n\r\n    uiOpenModal: '[UI] Open Modal',\r\n    uiCloseModal: '[UI] Close Modal',\r\n\r\n    eventLogout: '[Event] logout deleted events',\r\n    eventAddNew: '[Event] Add new',\r\n    eventSetActive: '[Event] Set active',\r\n    eventStartAddNew: '[Event] Start add new event',\r\n    eventClearActiveEvent: '[Event] Clear active event',\r\n    eventUpdate: '[Event] Update event',\r\n    eventDelete: '[Event] Delete event',\r\n    eventLoaded: '[Event] Events loaded',\r\n\r\n    authCheckingFinish: '[Auth] Finish Checking login state',\r\n    authStartLogin: '[Auth] Start login',\r\n    authLogin: '[Auth] Login',\r\n    authRegister: '[Auth] Register',\r\n    authStartTokenRenew: '[Auth] Star token renew',\r\n    authLogout: '[Auth] Logout',\r\n\r\n\r\n}","import moment from 'moment';\r\n//Para darle formato a la fechas y puedan aparecer en el calendario.\r\n\r\nexport const prepareEvents= (events=[]) =>{\r\n\r\n    return events.map(\r\n        (e)=>({\r\n            //retornamos todo el objeto tal cual\r\n            //titulo, fecha, usuario, etc, solo queremos modificar las fechas\r\n\r\n            ...e,\r\n            end: moment(e.end).toDate(),\r\n            start: moment(e.start).toDate()\r\n        })\r\n    );\r\n\r\n    \r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const eventStartAddNew=(event)=>{\r\n    return async (dispatch, getState)=>{\r\n\r\n        const {uid, name}=getState().auth;\r\n\r\n        try {\r\n\r\n            const res= await fetchConToken('events', event, 'POST');\r\n\r\n            const body= await res.json();\r\n\r\n            if(body.ok){\r\n                event.id=body.evento.id;\r\n                event.user={\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                dispatch(eventAddNew(event));\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst eventAddNew=(event) =>({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive=(event) =>({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\n\r\nexport const eventClearActiveEvent=()=>({\r\n    type:  types.eventClearActiveEvent\r\n})\r\n\r\nexport const deletedEventsLogout= ()=>({\r\n    type: types.eventLogout\r\n})\r\n\r\nexport const eventStartUpdate=(event)=>{\r\n    return async (dispatch) =>{\r\n        try {\r\n\r\n            \r\n           const res= await fetchConToken(`events/${event.id}`, event, \"PUT\");\r\n\r\n           const body= await res.json();\r\n          \r\n\r\n           if(body.ok){\r\n               dispatch(eventUpdate(event))\r\n           }\r\n           else{\r\n               Swal.fire('Error', body.msg, 'error');\r\n           }\r\n\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdate=(event)=>({\r\n\r\n    type: types.eventUpdate,\r\n    payload: event\r\n})\r\n\r\nexport const eventStartDelete= () => {\r\n    return async (dispatch, getState) =>{\r\n\r\n        const {id}=getState().calendar.activeEvent\r\n\r\n\r\n        try {\r\n\r\n            \r\n            const res= await fetchConToken(`events/${id}`, {}, \"DELETE\");\r\n \r\n            const body= await res.json();\r\n           \r\n \r\n            if(body.ok){\r\n                dispatch(eventDelete())\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Evento eliminado',\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                  })\r\n            }\r\n            else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n \r\n             \r\n         } catch (error) {\r\n             console.log(error);\r\n         }\r\n    }\r\n}\r\n\r\nconst eventDelete=()=>({\r\n    type:  types.eventDelete\r\n})\r\n\r\n\r\nexport const eventStartLoading= () =>{\r\n    return  async(dispatch)=>{\r\n        try {\r\n            const res= await fetchConToken('events');\r\n            const body= await res.json();\r\n            const events= prepareEvents(body.eventos);\r\n\r\n            \r\n            dispatch(eventLoaded(events));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded= (events) =>({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})","\r\n\r\nimport Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport { deletedEventsLogout } from \"./events\";\r\n\r\n\r\nexport const startLogin=(email, password) =>{\r\n    //Es asincrono\r\n    return async(dispatch) =>{\r\n        const res= await fetchSinToken('auth', {email, password}, 'POST');\r\n\r\n        const body= await res.json();\r\n        //console.log(body);\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }\r\n        else{\r\n            \r\n            \r\n            \r\n            \r\n            \r\n            //Aqui hay que mostrar el error correcto\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n};\r\n\r\nexport const startRegister=(email, password, name) =>{\r\n    return async(dispatch)=>{\r\n        const res= await fetchSinToken('auth/new', {email, password, name}, 'POST')\r\n        const body= await res.json();\r\n        //console.log(body);\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }\r\n        else{\r\n            \r\n            if(body.errors?.password){\r\n                Swal.fire('Error', body.errors.password.msg, 'error');\r\n            }\r\n\r\n            if(body.errors?.email){\r\n                Swal.fire('Error', body.errors.email.msg, 'error');\r\n            }\r\n\r\n           \r\n        }\r\n    }\r\n}\r\n\r\n\r\n//Esta funcion, la llamamos en el AppRouter, para ver si está checkeado\r\n//Esta funcion sirve para validar si el usuario está logueado, y traernos toda la info del backend\r\n//Para eso, hacemos uso del JWT\r\n//Lo leemos del store, y ahí está la información del usuario, como el uid, y el name\r\n\r\nexport const startChecking= () => {\r\n    return async (dispatch) =>{\r\n\r\n        const res= await fetchConToken('auth/renew');\r\n        const body= await res.json();\r\n        \r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }\r\n        else{\r\n            dispatch(checkingFinish());\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst checkingFinish= () =>({type: types.authCheckingFinish});\r\n\r\n\r\nconst login= (user) =>({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\nexport const startLogout=()=>{\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(deletedEventsLogout())\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nconst logout= () =>({\r\n    type: types.authLogout\r\n})","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [formLoginValues, handleLoginInputChange]= useForm({\r\n        login_Email: '',\r\n        login_Password: ''\r\n    });\r\n\r\n    const [formRegisterValues, handleRegisterInputChange]= useForm({\r\n        register_Name: '',\r\n        register_Email: '',\r\n        register_Password1: '',\r\n        register_Password2: ''\r\n    });\r\n\r\n\r\n    const {register_Name,\r\n        register_Email,\r\n        register_Password1,\r\n        register_Password2}= formRegisterValues;\r\n\r\n    const {login_Email, login_Password}=formLoginValues\r\n\r\n\r\n    const handleLogin= (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(login_Email, login_Password))\r\n    }\r\n\r\n    const handleRegister=(e) => {\r\n        e.preventDefault();\r\n        if(register_Password1!==register_Password2){\r\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error');\r\n        }\r\n\r\n        dispatch(startRegister(register_Email, register_Password1, register_Name));\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"fondo\">\r\n            <div className=\"container login-container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 login-form-1\">\r\n                        <h3>Ingreso</h3>\r\n                        <form onSubmit={handleLogin}>\r\n                            <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Correo\"\r\n                                    name=\"login_Email\"\r\n                                    value= {login_Email}\r\n                                    onChange={handleLoginInputChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Contraseña\"\r\n                                    name=\"login_Password\"\r\n                                    value= {login_Password}\r\n                                    onChange={handleLoginInputChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"submit\"\r\n                                    className=\"btnSubmit\"\r\n                                    value=\"Login\" \r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6 login-form-2\">\r\n                        <h3>Registro</h3>\r\n                        <form onSubmit={handleRegister}>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Nombre\"\r\n                                    name=\"register_Name\"\r\n                                    value={register_Name}\r\n                                    onChange={handleRegisterInputChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"email\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Correo\"\r\n                                    name=\"register_Email\"\r\n                                    value={register_Email }\r\n                                    onChange={handleRegisterInputChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Contraseña\"\r\n                                    name=\"register_Password1\"\r\n                                    value={register_Password1}\r\n                                    onChange={handleRegisterInputChange}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Repita la contraseña\"\r\n                                    name=\"register_Password2\" \r\n                                    value={register_Password2}\r\n                                    onChange={handleRegisterInputChange}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"submit\" \r\n                                    className=\"btnSubmit\" \r\n                                    value=\"Crear cuenta\" />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {name} = useSelector(state => state.auth)\r\n\r\n    const handleLogout= () =>{\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n\r\n            <button  \r\n            className=\"btn btn-outline-danger\"\r\n            onClick={handleLogout}\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\">\r\n                </i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n\r\n    const {title, user}= event;\r\n\r\n    const {name}= user;\r\n    \r\n    return (\r\n        <div>\r\n            <span>{title}</span>\r\n            <span>- {name}</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal=()=>({\r\n    type: types.uiOpenModal\r\n})\r\n\r\nexport const uiCloseModal=()=>({\r\n    type: types.uiCloseModal\r\n})","import React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-modal';\r\nimport { MuiPickersUtilsProvider, KeyboardDateTimePicker } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\n\r\nconst now=moment().minutes(0).seconds(0).add(1,'hours');\r\nconst nowPlus=now.clone().add(1,'hours');\r\n\r\n\r\nconst initEvent={\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    \r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(nowPlus.toDate());\r\n\r\n\r\n    const [titleValid, setTitleValid] = useState(true)\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {modalOpen} = useSelector(state => state.ui)\r\n    const {activeEvent} = useSelector(state => state.calendar)\r\n\r\n\r\n\r\n\r\n    const {notes, title, start, end}= formValues;\r\n\r\n    useEffect(() => {\r\n        if (dateStart !== null) {\r\n            setDateEnd(moment(dateStart).add(1, 'hours').toDate())\r\n        }\r\n    }, [dateStart]);\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        if(activeEvent){\r\n            setFormValues(activeEvent);\r\n        }\r\n        else{\r\n            setFormValues(initEvent);\r\n        }\r\n\r\n        \r\n    }, [activeEvent], [setFormValues])\r\n\r\n    const handleInputChange=({target})=>{\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n\r\n    const closeModal= ()=>{\r\n        //TODO cerrar modal\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent())\r\n        setFormValues(initEvent);\r\n        \r\n    }\r\n\r\n    const handleStartDateChange=(e)=>{\r\n        setDateStart(moment(e).toDate());\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n\r\n    }\r\n\r\n    const handleEndDateChange= (e)=>{\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n\r\n    const handleSubmitForm=(e)=>{\r\n        e.preventDefault();\r\n\r\n        const momentStart=moment(start);\r\n        const momentEnd=moment(end);\r\n\r\n        if(momentStart.isSameOrAfter(momentEnd)){\r\n\r\n            return Swal.fire('Error', 'La fecha fin debe ser mayor al inicio', 'error');\r\n        }\r\n\r\n        if(title.trim().length <2){\r\n\r\n            \r\n            return setTitleValid(false);\r\n        }\r\n\r\n        if(activeEvent){\r\n            dispatch(eventStartUpdate(formValues));\r\n        }\r\n        else{\r\n\r\n            //TODO: realizar grabacion\r\n        \r\n            dispatch(eventStartAddNew(formValues))\r\n\r\n        }\r\n\r\n        \r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n\r\n    /* minDate={dateStart} \r\n    es para la parte de la validacion de las fechas, para que la de inicio no supera la del final\r\n    se usan los estados tal como lo tenemos en el codigo.\r\n\r\n    */\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <Modal\r\n                isOpen={modalOpen}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                closeTimeoutMS={200}\r\n                className=\"modal\"\r\n                overlayClassName=\"modal-fondo\"\r\n            >\r\n                <h1>{(activeEvent)\r\n                ?\r\n                ('Editar Evento')\r\n                :\r\n                ('Crear evento')\r\n            }</h1>\r\n                <hr />\r\n                <form className=\"container\" onSubmit={handleSubmitForm}>\r\n                    <div className=\"form-group\">\r\n                        <KeyboardDateTimePicker\r\n                            inputVariant=\"outlined\"\r\n                            ampm={false}\r\n                            label=\"Fecha y hora inicio\"\r\n                            value={dateStart}\r\n                            onChange={handleStartDateChange}\r\n                            format=\"MMMM dd yyyy, HH:mm \"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <KeyboardDateTimePicker\r\n                            inputVariant=\"outlined\"\r\n                            ampm={false}\r\n                            label=\"Fecha y hora fin\"\r\n                            value={dateEnd}\r\n                            onChange={handleEndDateChange}\r\n                            minDate={dateStart}\r\n                            minDateMessage=\"End Date should be at least start Date \"\r\n                            format=\"MMMM dd yyyy, HH:mm \"\r\n                        />\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"form-group\">\r\n                        <label>Titulo y notas</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                            placeholder=\"Título del evento\"\r\n                            name=\"title\"\r\n                            value={title}\r\n                            onChange={handleInputChange}\r\n                            autoComplete=\"off\" />\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\"> Una descripción corta </small>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <textarea\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Notas\"\r\n                            rows=\"5\"\r\n                            name=\"notes\"\r\n                            value={notes}\r\n                            onChange={handleInputChange}\r\n                        >\r\n                        </textarea>\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\"> Información adicional </small>\r\n                    </div>\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-outline-primary btn-block\"\r\n                    ><i className=\"far fa-save\"></i>\r\n                        <span> Guardar</span>\r\n                    </button>\r\n                </form>\r\n            </Modal>\r\n        </MuiPickersUtilsProvider> \r\n    );\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew=()=>{\r\n        dispatch(uiOpenModal())\r\n    }\r\n\r\n    return (\r\n        <button className=\"btn btn-primary fab\"\r\n        onClick={handleClickNew}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button >\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport {eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleDelete=(e)=>{\r\n        dispatch(eventStartDelete());\r\n    }\r\n\r\n    return (\r\n        <button\r\n        className=\"btn btn-danger fab-danger\"\r\n        onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\">\r\n\r\n            </i>\r\n\r\n            <span> Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport { messages } from '../../helpers/calender-messages-es';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {  eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\n// const myEventsList=[{\r\n//     title: 'Tarea',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2,'hours').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Alex'\r\n//     }\r\n// }]\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //TODO: Leer del store los events\r\n\r\n    const {events, activeEvent} = useSelector(state => state.calendar)\r\n    const {uid} = useSelector(state => state.auth)\r\n\r\n    \r\n\r\n    const [lastView, setLastView] = useState(\r\n        localStorage.getItem(\"lastView\") || 'month'\r\n    )\r\n\r\n    //Para que cargue las tareas de la base de datos\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick= (e) =>{\r\n        dispatch(uiOpenModal());\r\n        \r\n    }\r\n\r\n    const onSelectEvent=(e)=>{\r\n        dispatch(eventSetActive(e))\r\n        \r\n    }\r\n\r\n    const onViewChange= (e) =>{\r\n        setLastView(e)\r\n        localStorage.setItem(\"lastView\", e);\r\n    }\r\n\r\n    const onSelectSlot=(e)=>{\r\n        //Cuando le de click en otro lado, pues desactivamos el evento activo\r\n        dispatch(eventClearActiveEvent());\r\n        \r\n    }\r\n\r\n\r\n    const eventStyleGetter= (event, start, end, isSelected)=>{\r\n    \r\n        const style={\r\n            backgroundColor: (uid===event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: '#fff'\r\n        }\r\n\r\n        return{\r\n            style\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n            <Calendar\r\n            localizer={localizer}\r\n            events={events}\r\n            startAccessor=\"start\"\r\n            endAccessor=\"end\"\r\n            style={{ height: 500 }}\r\n            messages={messages}\r\n            eventPropGetter={eventStyleGetter}\r\n            components={{\r\n                event: CalendarEvent\r\n            }}\r\n            onDoubleClickEvent={onDoubleClick}\r\n            onSelectEvent={onSelectEvent}\r\n            onView={onViewChange}\r\n            view={lastView}\r\n            onSelectSlot={onSelectSlot}\r\n            selectable={true}\r\n            />\r\n\r\n            <AddNewFab />\r\n            {\r\n                (activeEvent)\r\n                ?\r\n                <DeleteEventFab/>\r\n                :\r\n                null\r\n            }\r\n            \r\n            <CalendarModal />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n   \r\n    localStorage.setItem('lastpath', rest.location.pathname);\r\n    \r\n    return (\r\n        <Route \r\n        {...rest}\r\n        component={\r\n            (props)=>(\r\n                (isAuthenticated)\r\n                ?\r\n                (<Component {...props} />)\r\n                :\r\n                //Para evitar un ciclo infinito\r\n                //Aquí ponemos que lo redirija a la autenticación\r\n                (<Redirect to=\"/login\" />)\r\n            )\r\n        }\r\n        />\r\n    )\r\n}\r\n\r\n//Esto puede servir para cualquier proyecto que haga\r\n\r\n//Y esto para validar que siempre que se use, pues se el manden los parametros correctos\r\nPrivateRoute.protoType={\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route \r\n        {...rest}\r\n        component={\r\n            (props)=>(\r\n                (!isAuthenticated)\r\n                ?\r\n                (<Component {...props} />)\r\n                :\r\n                (<Redirect to=\"/\" />)\r\n            )\r\n        }\r\n        />\r\n    )\r\n}\r\n\r\n//Esto puede servir para cualquier proyecto que haga\r\n\r\n//Y esto para validar que siempre que se use, pues se el manden los parametros correctos\r\nPublicRoute.protoType={\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from 'react'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen'\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n  } from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    //Cierra sesión porque el AppRouter está pendiendte del cambio del uid, en el storage\r\n\r\n    const {checking, uid} = useSelector(state => state.auth)\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n      //Lo que hacemos aquí es checkear\r\n      dispatch(startChecking())\r\n    }, [dispatch])\r\n\r\n    if(checking){\r\n      return (<h5>Espere....</h5>);\r\n    }\r\n\r\n\r\n    return (\r\n        <Router>\r\n      <div>\r\n\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <PublicRoute  \r\n          exact path=\"/login\" \r\n          component={LoginScreen}\r\n          //Para pasarlo a un valor booleano\r\n          isAuthenticated={!!uid}\r\n          />\r\n       \r\n         <PrivateRoute \r\n         exact path=\"/\" \r\n         component={CalendarScreen}\r\n         isAuthenticated={!!uid}\r\n          />\r\n            \r\n         <Redirect to=\"/\" />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\n\r\nconst initialState={\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer= (state=initialState, action)=>{\r\n\r\n    switch (action.type) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                //Ya se autenticó\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n        \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport { types } from '../types/types';\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'Tarea',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2,'hours').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Alex'\r\n//     }\r\n// }\r\n\r\n\r\nconst initialState={\r\n    events:[ ],\r\n    activeEvent: null\r\n};\r\n\r\n\r\nexport const calendarReducer=(state= initialState, action)=>{\r\n    switch (action.type) {\r\n\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n        }\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [...state.events, action.payload]\r\n            }\r\n        \r\n        case types.eventClearActiveEvent:\r\n            return{\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        \r\n        case types.eventUpdate:\r\n            return{\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id===action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n\r\n        case types.eventDelete:\r\n            return{\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e=> (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return{\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n    \r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState={\r\n    modalOpen: true,\r\n}\r\n\r\n\r\nexport const uiReducer=(state=initialState, action)=>{\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uireducer\";\r\n\r\n\r\nexport const rootReducer=combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    //TODO: AuthReducer\r\n    auth: authReducer,\r\n    //TODO: CalenderReducer\r\n})\r\n","import { applyMiddleware, createStore, compose  } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store=createStore(\r\n    rootReducer,\r\n\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n\r\n);\r\n\r\n","import React from 'react'\r\nimport { AppRouter } from './router/AppRouter';\r\n\r\nimport {Provider} from 'react-redux';\r\nimport { store } from './store/store';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\n\n\nReactDOM.render(\n  \n    <CalendarApp />\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}